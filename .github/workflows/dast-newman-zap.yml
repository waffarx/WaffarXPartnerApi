# .github/workflows/dast-newman-zap.yml
name: "DAST: Newman + ZAP Proxy"

on:
  workflow_dispatch:

jobs:
  dast-proxy:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out everything
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2) Pull the ZAP Docker image (from GHCR, which is public)
      - name: Pull OWASP ZAP image
        run: |
          docker pull ghcr.io/zaproxy/zap2docker-stable:latest

      # 3) Start ZAP in the background with your script mounted
      - name: Start ZAP daemon
        run: |
          docker run -d --name zap \
            -p 8080:8080 \
            -v $PWD/zap-scripts:/zap/scripts:ro \
            ghcr.io/zaproxy/zap2docker-stable:latest \
            zap.sh -daemon -host 0.0.0.0 -port 8080 \
                   -config api.disablekey=true

      # 4) Wait for ZAP to be up
      - name: Wait for ZAP
        run: |
          for i in {1..12}; do
            curl --fail http://localhost:8080 || sleep 5
          done

      # 5) Install Node.js & Newman
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install Newman
        run: npm install -g newman

      # 6) Run your Postman collection (with globals) through ZAP
      - name: Run Postman via ZAP proxy
        run: |
          newman run postman/WaffarXPartnerApi.postman_collection.json \
            --globals postman/workspace.postman_globals.json \
            --proxy http://127.0.0.1:8080

      # 7) Perform a full active scan in the same ZAP container
      - name: Run ZAP active scan
        run: |
          ZAP_CID=$(docker ps --filter "name=zap" -q)
          docker exec $ZAP_CID zap-full-scan.py \
            -t https://partners.waffarx.com \
            -z "script=add-signature;type=httpsender;engine=ECMAScript;file=/zap/scripts/add-signature.js" \
            -r zap-active-report.html

      # 8) Tear down the ZAP container
      - name: Stop ZAP
        run: docker stop zap

      # 9) Upload the HTML report
      - name: Upload ZAP Active Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-active-report
          path: zap-active-report.html
