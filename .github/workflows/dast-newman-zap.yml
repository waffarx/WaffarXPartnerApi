name: "DAST: Newman + ZAP Proxy 17"

on:
  workflow_dispatch:

jobs:
  dast-proxy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Pull ZAP Docker image
        run: docker pull zaproxy/zap-stable:latest

      - name: Start ZAP daemon in Docker
        run: |
          mkdir -p zap-reports
          docker run -d --name zap \
            -p 8080:8080 \
            -v "${{ github.workspace }}/postman/add-signature.js:/zap/scripts/add-signature.js:ro" \
            -v "${{ github.workspace }}/zap-reports:/zap/wrk" \
            zaproxy/zap-stable:latest \
            zap.sh -daemon -host 0.0.0.0 -port 8080 \
                   -config api.disablekey=true \
                   -config connection.timeoutInSecs=60 \
                   -script /zap/scripts/add-signature.js

      - name: Wait for ZAP to be ready
        run: |
          for i in {1..24}; do
            curl --silent --fail http://127.0.0.1:8080 && break
            sleep 5
          done

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Newman
        run: npm install -g newman

      - name: Run Postman collection via ZAP proxy
        env:
          HTTP_PROXY: http://127.0.0.1:8080
          HTTPS_PROXY: http://127.0.0.1:8080
          NODE_TLS_REJECT_UNAUTHORIZED: '0'
        run: |
          newman run postman/WaffarXPartnerApi.postman_collection.json \
            --globals postman/workspace.postman_globals.json

      - name: Run ZAP active scan via API
        run: |
          # Wait for ZAP API to be fully ready
          sleep 30
          
          # Install required tools in container
          docker exec zap apt-get update
          docker exec zap apt-get install -y curl jq
          
          # Run active scan using ZAP API directly
          docker exec zap curl "http://localhost:8080/JSON/ascan/action/scan/?apikey=&url=https://partners.waffarx.com&recurse=true&scanPolicyName=&method=&postData=&contextId="
          
          # Wait for scan to complete
          while true; do
            status=$(docker exec zap curl -s "http://localhost:8080/JSON/ascan/view/status/?apikey=" | jq -r .status)
            [[ "$status" == "100" ]] && break
            echo "Scan progress: $status%"
            sleep 10
          done
          
          # Generate HTML report
          docker exec zap curl "http://localhost:8080/OTHER/core/other/htmlreport/?apikey=" -o /zap/wrk/zap-active-report.html

      - name: Stop ZAP
        if: always()
        run: docker stop zap

      - name: Upload ZAP Active Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-active-report
          path: zap-reports/zap-active-report.html