name: "DAST: Newman + ZAP Proxy 19"

on:
  workflow_dispatch:

jobs:
  dast-proxy:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Increased timeout to 60 minutes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Pull ZAP Docker image
        run: docker pull zaproxy/zap-stable:latest

      - name: Start ZAP daemon in Docker
        run: |
          mkdir -p zap-reports
          docker run -d --name zap \
            -p 8080:8080 \
            -v "${{ github.workspace }}/postman/add-signature.js:/zap/scripts/add-signature.js:ro" \
            -v "${{ github.workspace }}/zap-reports:/zap/wrk" \
            --memory="2g" --memory-swap="2g" \  # Limit memory usage
            zaproxy/zap-stable:latest \
            zap.sh -daemon -host 0.0.0.0 -port 8080 \
                   -config api.disablekey=true \
                   -config connection.timeoutInSecs=120 \  # Increased timeout
                   -config scanner.threadPerHost=10 \  # Reduced threads
                   -script /zap/scripts/add-signature.js

      - name: Wait for ZAP to be ready
        run: |
          for i in {1..24}; do
            curl --silent --fail http://127.0.0.1:8080 && break
            sleep 5
          done

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Newman
        run: npm install -g newman

      - name: Run Postman collection via ZAP proxy
        env:
          HTTP_PROXY: http://127.0.0.1:8080
          HTTPS_PROXY: http://127.0.0.1:8080
          NODE_TLS_REJECT_UNAUTHORIZED: '0'
        run: |
          newman run postman/WaffarXPartnerApi.postman_collection.json \
            --globals postman/workspace.postman_globals.json

      - name: Prepare ZAP for scan
        run: |
          # Install required tools as root
          docker exec -u root zap sh -c "apt-get update && apt-get install -y curl jq"
          
          # Increase ZAP timeout settings
          docker exec zap curl -s "http://localhost:8080/JSON/core/action/setOptionTimeoutInSecs/?apikey=&Integer=120"
          docker exec zap curl -s "http://localhost:8080/JSON/ascan/action/setOptionScanTimeoutInMins/?apikey=&Integer=45"

      - name: Run ZAP active scan via API
        run: |
          # Start active scan
          docker exec zap sh -c 'curl -s "http://localhost:8080/JSON/ascan/action/scan/?apikey=&url=https://partners.waffarx.com&recurse=true"'
          
          # Monitor scan progress with extended timeout
          start_time=$(date +%s)
          timeout=$((60 * 45))  # 45 minutes timeout
          
          while true; do
            # Check total elapsed time
            current_time=$(date +%s)
            elapsed=$((current_time - start_time))
            
            if [ $elapsed -ge $timeout ]; then
              echo "Scan timed out after 45 minutes"
              break
            fi
            
            # Get scan status
            status=$(docker exec zap sh -c 'curl -s "http://localhost:8080/JSON/ascan/view/status/?apikey=" | jq -r .status 2>/dev/null || echo "error"')
            
            if [[ "$status" == "100" ]]; then
              echo "Scan completed successfully"
              break
            elif [[ "$status" == "error" ]]; then
              echo "Error retrieving scan status"
              sleep 10
              continue
            fi
            
            echo "Scan progress: $status%"
            sleep 30  # Longer sleep between checks
          done
          
          # Generate HTML report regardless of completion status
          echo "Generating scan report..."
          docker exec zap sh -c 'curl -s "http://localhost:8080/OTHER/core/other/htmlreport/?apikey=" -o /zap/wrk/zap-active-report.html'

      - name: Stop ZAP
        if: always()
        run: docker stop zap

      - name: Upload ZAP Active Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-active-report
          path: zap-reports/zap-active-report.html