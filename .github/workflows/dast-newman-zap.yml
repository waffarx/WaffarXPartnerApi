name: "DAST: Newman + ZAP Proxy 22"

on:
  workflow_dispatch:

jobs:
  dast-proxy:
    runs-on: ubuntu-latest

    services:
      zap:
        image: zaproxy/zap-stable:latest
        ports: ["8080:8080"]
        options: >-
          --health-cmd='curl -s http://localhost:8080 || exit 1'
          --health-interval=10s
          --health-retries=12
        volumes:
          - ./postman/add-signature.js:/zap/scripts/add-signature.js:ro
          - ${{ github.workspace }}/zap-reports:/zap/wrk

    steps:
      # 1) Checkout code + Postman assets + script
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) Ensure report folder exists on host
      - name: Prepare report directory
        run: mkdir -p zap-reports

      # 3) Wait for ZAP’s API to become ready
      - name: Wait for ZAP to be ready
        run: |
          for i in {1..24}; do
            curl --silent --fail http://127.0.0.1:8080 && break
            sleep 5
          done

      # 4) Install Node.js and Newman
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Newman
        run: npm install -g newman

      # 5) Run your Postman collection through the ZAP proxy
      - name: Run Postman collection via ZAP proxy
        env:
          HTTP_PROXY: http://127.0.0.1:8080
          HTTPS_PROXY: http://127.0.0.1:8080
          NODE_TLS_REJECT_UNAUTHORIZED: '0'
        run: |
          newman run postman/WaffarXPartnerApi.postman_collection.json \
            --globals postman/workspace.postman_globals.json

      # 6) Kick off a full active scan inside the ZAP container
      - name: Run ZAP active scan via API
        run: |
          ZAP_CID=$(docker ps --filter "ancestor=zaproxy/zap-stable" -q)
          # wait again just in case
          for i in {1..12}; do
            docker exec $ZAP_CID curl --silent --fail http://localhost:8080 && break
            sleep 5
          done
          docker exec $ZAP_CID zap-full-scan.py \
            -t https://partners.waffarx.com \
            -z "-config api.disablekey=true" \
            -d \
            -m 5 \
            -r /zap/wrk/zap-active-report.html \
            -I

      # 7) Always stop ZAP when we’re done (or on failure)
      - name: Stop ZAP
        if: always()
        run: docker stop zap || true

      # 8) Upload the HTML report
      - name: Upload ZAP Active Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-active-report
          path: zap-reports/zap-active-report.html
