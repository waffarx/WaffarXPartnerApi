name: "DAST: Newman + ZAP Proxy 16"

on:
  workflow_dispatch:

jobs:
  dast-proxy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Pull ZAP Docker image
        run: docker pull zaproxy/zap-stable:latest

      - name: Start ZAP daemon in Docker
        run: |
          mkdir -p zap-reports
          docker run -d --name zap \
            -p 8080:8080 \
            -v "${{ github.workspace }}/postman/add-signature.js:/zap/scripts/add-signature.js:ro" \
            -v "${{ github.workspace }}/zap-reports:/zap/wrk" \
            zaproxy/zap-stable:latest \
            zap.sh -daemon -host 0.0.0.0 -port 8080 \
                   -config api.disablekey=true \
                   -config connection.timeoutInSecs=60 \
                   -script /zap/scripts/add-signature.js

      - name: Wait for ZAP to be ready
        run: |
          for i in {1..24}; do
            curl --silent --fail http://127.0.0.1:8080 && break
            sleep 5
          done

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Newman
        run: npm install -g newman

      - name: Run Postman collection via ZAP proxy
        env:
          HTTP_PROXY: http://127.0.0.1:8080
          HTTPS_PROXY: http://127.0.0.1:8080
          NODE_TLS_REJECT_UNAUTHORIZED: '0'
        run: |
          newman run postman/WaffarXPartnerApi.postman_collection.json \
            --globals postman/workspace.postman_globals.json

      - name: Install zap-cli in ZAP container
        run: |
          # Switch to root user for package installation
          docker exec zap sh -c "whoami"
          
          # Install required system packages
          docker exec zap sh -c "apt-get update && apt-get install -y python3-pip"
          
          # Install zap-cli in user space
          docker exec zap sh -c "pip3 install --user zapcli"
          
          # Verify installation
          docker exec zap sh -c "/home/zap/.local/bin/zap-cli --version || echo 'zap-cli installation failed'"

      - name: Run ZAP active scan via API
        run: |
          # Wait for ZAP API to be fully ready
          docker exec zap curl --silent --output /dev/null http://localhost:8080
          
          # Run active scan
          docker exec -u zap zap /home/zap/.local/bin/zap-cli --zap-url http://localhost:8080 active-scan \
            --scanners all \
            --recursive \
            https://partners.waffarx.com
          
          # Generate HTML report
          docker exec -u zap zap /home/zap/.local/bin/zap-cli --zap-url http://localhost:8080 report \
            -o /zap/wrk/zap-active-report.html \
            -f html

      - name: Stop ZAP
        if: always()
        run: docker stop zap

      - name: Upload ZAP Active Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-active-report
          path: zap-reports/zap-active-report.html